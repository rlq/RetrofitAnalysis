<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright 2018 Google LLC
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.

  1. 当前xml对应的DataBidnding类 FragmentGardenBinding
    public class FragmentGardenBindingImpl extends FragmentGardenBinding  {
  2. Impl类中的 调用BindingAdapter接口
    @BindingAdapter("image")
    fun setImage(imageView: ImageView, imageUrl: String?) {
        if (!imageUrl.isNullOrEmpty()) {
            Glide.with(imageView.context)
                .load(imageUrl)
                .transition(DrawableTransitionOptions.withCrossFade())
                .into(imageView)
        }
    }
  3. BindingAdapter中定义一些接口，在xml布局变量中定义一个String，用于存放网络图片的地址
    <variable
            name="networkImage"
            type="String" />
  4. 接着在xml中通过别名，使用@{}中的参数，调用接口时传入的参数
    <ImageView
        app:image="@{networkImage}"/>
  5. 在Activity中为布局变量赋值
    activityBindingAdapterBinding = DataBindingUtil.setContentView(this, R.layout.fragment_garden);
    activityBindingAdatperBinding.setNetworkImage("https://XXXX.jpg");


  1. 重载
    @BindingAdapter("defaultImageResource")
    fun setImage(imageView: ImageView, imageUrl: String?, imageResource: Int) {
        if (!imageUrl.isNullOrEmpty()) {
            Glide.with(imageView.context)
                .load(imageUrl)
                .error(imageResource) //错误图片
                .transition(DrawableTransitionOptions.withCrossFade())
                .into(imageView)
        }
    }

   2. BindingAdapter中定义一些接口，在xml布局变量中定义一个String，用于存放网络图片的地址
        <variable
            name="localImage"
            type="int" />
   3. 接着在xml中通过别名，使用@{}中的参数，调用接口时传入的参数
    <ImageView
        app:defaultImageResource="@{localImage}"
        app:image="@{networkImage}"/>
   4. 在Activity中为布局变量赋值
    activityBindingAdapterBinding = DataBindingUtil.setContentView(this, R.layout.fragment_garden);
    activityBindingAdatperBinding.setLocalImage(R.drawable.local_image);

  -->

<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>

        <variable
                name="hasPlantings"
                type="boolean" />

        <variable
            name="networkImage"
            type="String" />

        <variable
            name="localImage"
            type="int" />
    </data>

    <FrameLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent">

        <androidx.recyclerview.widget.RecyclerView
                android:id="@+id/garden_list"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:clipToPadding="false"
                android:layout_marginStart="@dimen/card_side_margin"
                android:layout_marginEnd="@dimen/card_side_margin"
                android:layout_marginTop="@dimen/margin_normal"
                app:isGone="@{!hasPlantings}"
                app:layoutManager="androidx.recyclerview.widget.StaggeredGridLayoutManager"
                app:spanCount="@integer/grid_columns"/>

        <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:gravity="center"
                android:orientation="vertical"
                app:isGone="@{hasPlantings}">

            <TextView
                    android:id="@+id/empty_garden"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="@string/garden_empty"
                    android:textAppearance="?attr/textAppearanceHeadline5" />

            <com.google.android.material.button.MaterialButton
                android:id="@+id/add_plant"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:textColor="?attr/colorPrimary"
                android:text="@string/add_plant"
                app:backgroundTint="?attr/colorOnPrimary"
                app:shapeAppearance="@style/ShapeAppearance.Sunflower.Button.Add"/>

            <ImageView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                app:defaultImageResource="@{localImage}"
                app:image="@{networkImage}"/>

        </LinearLayout>

    </FrameLayout>

</layout>
